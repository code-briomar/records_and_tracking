//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "cases")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub case_id: Option<i32>,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    #[sea_orm(column_type = "Text")]
    pub status: String,
    pub assigned_staff_id: Option<i32>,
    #[sea_orm(column_type = "Text")]
    pub priority: String,
    pub date_created: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::files::Entity")]
    Files,
    #[sea_orm(
        belongs_to = "super::staff::Entity",
        from = "Column::AssignedStaffId",
        to = "super::staff::Column::StaffId",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    Staff,
}

impl Related<super::files::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Files.def()
    }
}

impl Related<super::staff::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Staff.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
